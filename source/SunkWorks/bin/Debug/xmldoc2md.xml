<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SunkWorks</name>
    </assembly>
    <members>
        <member name="T:SunkWorks.KerbalGear.WBIEVAOverrides">
            <summary>
            A Utility class to alter a kerbal's buoyancy.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVAOverrides.buoyancyOverride">
            <summary>
            The buoyancy override
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVAOverrides.evaOverrideParts">
            <summary>
            These inventory parts contain eva overrides that are specified by EVA_OVERRIDES nodes.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIEVAOverrides.OnInactive">
            <summary>
            Overrides OnInactive. Called when an inventory item is unequipped and the module is disabled.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIEVAOverrides.OnActive">
            <summary>
            Overrides OnActive. Called when an inventory item is equipped and the module is enabled.
            </summary>
        </member>
        <member name="T:SunkWorks.KerbalGear.WBIEVADiveComputer">
            <summary>
            Controls the kerbal's buoyancy and swim speed, with the ability to increase diving depth when wearing the proper suit.
            Hard mode includes limited air supply.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.buoyancyControlStateDisplay">
            <summary>
            Displays the buoyancy control state.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.maxPositiveBuoyancy">
            <summary>
            Max positive buoyancy.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.buoyancyControlRate">
            <summary>
            How fast to control buoyancy, in percentage per second.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.swimSpeedMultiplier">
            <summary>
            How much to multiply the swim speed by when this module is enabled.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.suitMaxPressures">
            <summary>
            In kPA, the maximum pressure that the kerbal can take if he/she is wearing a designated suit.
            Format: 'name of the suit','max pressure';'name of another suit','max pressure of the other suit'
            NOTE: If a carried cargo part has an EVA_OVERRIDES node, then the values in that node will override the suit pressures.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.holdBreathDuration">
            <summary>
            In seconds, how long a kerbal can hold is/her breath if the kerbal isn't wearing a helmet.
            If the kerbal runs out of breath then he/she will start drowning.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.drowningDuration">
            <summary>
            In seconds, how long a kerbal has to reach the surface before dying of drowing.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.airSupplyDuration">
            <summary>
            In seconds, how long the air supply lasts.
            This duration will be cut in half for every 10m of depth unless wearing an atmospheric diving suit.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.airRechargeRate">
            <summary>
            How many seconds of air supply to recarge per second of being on the surface.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.currentBuoyancy">
            <summary>
            Current buoyancy level.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIEVADiveComputer.maintainDepth">
            <summary>
            Flag indicating if we should maintain depth.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIEVADiveComputer.Sink">
            <summary>
            Floods ballast, sinking the kerbal.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIEVADiveComputer.Swim">
            <summary>
            Vents ballast, floating the kerbal.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIEVADiveComputer.SetNeutralBuoyancy">
            <summary>
            Neutralizes buoyancy.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIEVADiveComputer.FixedUpdate">
            <summary>
            Controls buoyancy over a fixed unit of time.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIEVADiveComputer.OnStart(PartModule.StartState)">
            <summary>
            Overrides OnStart
            </summary>
            <param name="state">The StartState.</param>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIEVADiveComputer.OnActive">
            <summary>
            Overrides OnActive. Called when an inventory item is equipped and the module is enabled.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIEVADiveComputer.OnInactive">
            <summary>
            Overrides OnInactive. Called when an inventory item is unequipped and the module is disabled.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIEVADiveComputer.updateUI">
            <summary>
            Updates the Part Action Window.
            </summary>
        </member>
        <member name="T:SunkWorks.KerbalGear.WBIKerbalEVAModules">
            <summary>
            Special thanks to Vali for figuring out this issue! :)
            The Vintage, Standard, and Future suits are all defined in separate part modules that are combined when KSP starts.
            The problem is that when Module Manager is used to add part modules to the kerbal, you'll get duplicates.
            One solution is to disable or outright remove the duplicate part module, but we have several part modules to manage.
            So to get around that problem, the WBIPartModuleUtils adds a custom LoadingSystem that adds any part modules defined by a KERBAL_EVA_MODULES node.
            </summary>
        </member>
        <member name="T:SunkWorks.KerbalGear.WBIKerbalEVAModules.EVAModulesLoader">
            <summary>
            An internal helper class that reads KERVAL_EVA_MODULES for MODULE nodes to add to a kerbal.
            </summary>
        </member>
        <member name="T:SunkWorks.KerbalGear.WBISuitSwitcher">
            <summary>
            A handy part module for in-flight wardrobe changes.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBISuitSwitcher.OpenWardrobe">
            <summary>
            Opens the wardrobe GUI.
            </summary>
        </member>
        <member name="T:SunkWorks.KerbalGear.BodyLocations">
            <summary>
            Various locations where an wearable item can be placed.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.BodyLocations.back">
            <summary>
            On the back of the kerbal.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.BodyLocations.backOrJetpack">
            <summary>
            On the back of the kerbal, or the back of the jetpack if the kerbal has a jetpack.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.BodyLocations.leftFoot">
            <summary>
            The left foot of the kerbal.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.BodyLocations.rightFoot">
            <summary>
            The right foot of the kerbal.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.BodyLocations.leftBicep">
            <summary>
            The left bicep of the kerbal.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.BodyLocations.rightBicep">
            <summary>
            The right bicep of the kerbal.
            </summary>
        </member>
        <member name="T:SunkWorks.KerbalGear.WBIWearableItem">
            <summary>
            A helper class for wearable items.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableItem.moduleID">
            <summary>
            ID of the module. This should be unique to the part.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableItem.bodyLocation">
            <summary>
            Where to place the item, such as on the back of the kerbal, the end of the backpack. etc.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableItem.anchorTransform">
            <summary>
            Name of the high-level anchor transform. This will follow the bodyLocation bone as it moves.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableItem.meshTransform">
            <summary>
            Name of the 3D model. This will be rotated and positioned relative to the anchorTransform.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableItem.positionOffset">
            <summary>
            Position offsets
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableItem.positionOffsetJetpack">
            <summary>
            Position offset that is used when the kerbal has a jetpack in addition to the wearable item.
            Requires bodyLocation = backOrJetpack
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableItem.rotationOffset">
            <summary>
            Rotation offsets in degrees
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableItem.evaModules">
            <summary>
            Name of the part modules to enable on the kerbal when you equip the wearable item.
            Separate names with a semicolon.
            </summary>
        </member>
        <member name="T:SunkWorks.KerbalGear.WBIWearableProp">
            <summary>
            Represents an instance of a wearable prop. One WBIWearableProp corresponds to a part's WBIWearableItem part module.
            Since WBIWearableItem is created in relation to the part prefab, we use WBIWearableProp per kerbal on EVA.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableProp.prop">
            <summary>
            The game object representing the prop.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableProp.meshTransform">
            <summary>
            The physical prop mesh.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableProp.name">
            <summary>
            Name of the prop.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableProp.partName">
            <summary>
            Name of the part containing the prop
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableProp.bodyLocation">
            <summary>
            Location of the prop on the kerbal's body.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableProp.positionOffset">
            <summary>
            Position offset of the prop.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableProp.positionOffsetJetpack">
            <summary>
            Position offset of the prop if the kerbal has a jetpack and bodyLocation is backOrJetpack.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearableProp.rotationOffset">
            <summary>
            Rotation offset of the prop.
            </summary>
        </member>
        <member name="T:SunkWorks.KerbalGear.WBIWearablesController">
            <summary>
            A utility class to handle wearable items and the part modules associated with them.
            </summary>
        </member>
        <member name="F:SunkWorks.KerbalGear.WBIWearablesController.debugMode">
            <summary>
            Flag to turn on/off debug mode.
            </summary>
        </member>
        <member name="M:SunkWorks.KerbalGear.WBIWearablesController.ShowPropOffsetView">
            <summary>
            Debug button that shows the prop offset view.
            </summary>
        </member>
        <member name="T:SunkWorks.Submarine.SWAquaticEngine">
            <summary>
            This class is an engine that only runs underwater. It needs no resource intake; if underwater then it'll auto-replenish the part's resource reserves.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWAquaticEngine.isReverseThrust">
            <summary>
            Flag to indicate whether or not the engine is in reverse-thrust mode.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWAquaticEngine.isUnderwater">
            <summary>
            Flag to indicate whether or not the engine is underwater
            </summary>
        </member>
        <member name="T:SunkWorks.Submarine.SWAquaticRCS">
            <summary>
            An aquatic RCS part module
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWAquaticRCS.debugMode">
            <summary>
            Flag to enable debug mode.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWAquaticRCS.intakeTransformName">
            <summary>
            Name of the part's intake transform.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWAquaticRCS.propellerTransformName">
            <summary>
            Name of the part's propeller (if any).
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWAquaticRCS.propellerRPM">
            <summary>
            Rotations Per Minute for the propeller.
            </summary>
        </member>
        <member name="T:SunkWorks.Submarine.BallastTankTypes">
            <summary>
            Type of ballast tank. This is used for auto-triming the boat.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastTankTypes.Ballast">
            <summary>
            Generic ballast tank. Does not trim.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastTankTypes.ForwardTrim">
            <summary>
            Forward trim tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastTankTypes.ForwardPort">
            <summary>
            Forward-port trim
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastTankTypes.ForwardStarboard">
            <summary>
            Forward-starboard trim
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastTankTypes.PortTrim">
            <summary>
            Port trim tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastTankTypes.StarboardTrim">
            <summary>
            Starboard trim tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastTankTypes.AftTrim">
            <summary>
            Aft trim tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastTankTypes.AftPort">
            <summary>
            Aft-port trim
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastTankTypes.AftStarboard">
            <summary>
            Aft-starboard trim.
            </summary>
        </member>
        <member name="T:SunkWorks.Submarine.BallastVentStates">
            <summary>
            Vent states of the ballast tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastVentStates.Closed">
            <summary>
            Tank is closed
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastVentStates.FloodingBallast">
            <summary>
            Tank is flooding ballast
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.BallastVentStates.VentingBallast">
            <summary>
            Tank is venting ballast
            </summary>
        </member>
        <member name="T:SunkWorks.Submarine.SWBallastTank">
            <summary>
            Represents a ballast tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.debugMode">
            <summary>
            Debug flag
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.intakeTransformName">
            <summary>
            Name of the part's intake transform.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.ballastResourceName">
            <summary>
            Ballast resource
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.addBallastEffect">
            <summary>
            Name of the venting effect to play when the tank is taking on ballast.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.ventBallastEffect">
            <summary>
            Name of the venting effect to play when the tank is venting ballast.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.fullFillRate">
            <summary>
            How many seconds to fill the ballast tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.fullVentRate">
            <summary>
            How many seconds to vent the ballast tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.tankType">
            <summary>
            Type of ballast tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.tankTypeString">
            <summary>
            Current display state of the ballast tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.ventState">
            <summary>
            Current state of the ballast tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.ventStateString">
            <summary>
            Current display state of the ballast tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.updateSymmetryTanks">
            <summary>
            Flag to indicate whether or not to update symmetry tanks.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.fluidTransferPercentage">
            <summary>
            Percentage of the overall ballast fluid transfer rate
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.reconfigureSkill">
            <summary>
            The skill required to reconfigure the ballast tank
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.reconfigureRank">
            <summary>
            Skill rank needed to reconfigure the ballast tank.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.tankTypeIndex">
            <summary>
            Index for the tank types.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.isConverted">
            <summary>
            Flag to indicate whether or not the fuel tank has been converted to ballast tank.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.updatePAW">
            <summary>
            Flag to indicate that we need to update the PAW
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.hostPart">
            <summary>
            The part that is hosting the SWBallastTank.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.ballastResource">
            <summary>
            The PartResource containing the ballast.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWBallastTank.onBallastTankUpdated">
            <summary>
            Signifies that the ballast has been updated
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.ConvertToBallastTank">
            <summary>
            Converts the host part to a ballast tank.
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.RestoreResourceCapacity">
            <summary>
            Restores the host part's resource storage capacity.
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.FloodBallast">
            <summary>
            Floods the ballast tank
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.VentBallast">
            <summary>
            Vents ballast tank
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.CloseVents">
            <summary>
            Close ballast vents
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.EmergencySurface">
            <summary>
            Emergency surface
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.FloodBallastAction(KSPActionParam)">
            <summary>
            Action to flood ballast tank
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.VentBallastAction(KSPActionParam)">
            <summary>
            Action to vent ballast tank
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.CloseVentsAction(KSPActionParam)">
            <summary>
            Close ballast vents action
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.EmergencySurfaceAction(KSPActionParam)">
            <summary>
            Emergency surface action
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.DumpBallast(System.Boolean)">
            <summary>
            Dumps ballast
            </summary>
            <param name="updateSymmetryParts">A bool indicating whether or not to update symmetry parts</param>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.SetVentState(SunkWorks.Submarine.BallastVentStates,System.Single)">
            <summary>
            Sets the vent state
            </summary>
            <param name="state">The new BallastVentStates</param>
            <param name="fluidTransferRate">A float containing the new fluid transfer percentage</param>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.CanTrimForward">
            <summary>
            Indicates that the tank can be used for forward trim.
            </summary>
            <returns>True if it can be used for trim, false if not.</returns>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.CanTrimAft">
            <summary>
            Indicates that the tank can be used for aft trim.
            </summary>
            <returns>True if it can be used for trim, false if not.</returns>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.CanTrimPort">
            <summary>
            Indicates that the tank can be used for portside trim.
            </summary>
            <returns>True if it can be used for trim, false if not.</returns>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.CanTrimStarboard">
            <summary>
            Indicates that the tank can be used for starboard trim.
            </summary>
            <returns>True if it can be used for trim, false if not.</returns>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.OnDestroy">
            <summary>
            Handles the OnDestroy event
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.OnAwake">
            <summary>
            Handles OnAwake event
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.GetModuleDisplayName">
            <summary>
            Gets the module display name.
            </summary>
            <returns>A string containing the display name.</returns>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.GetInfo">
            <summary>
            Gets the module description.
            </summary>
            <returns>A string containing the module description.</returns>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.OnStart(PartModule.StartState)">
            <summary>
            Handles the OnStart event.
            </summary>
            <param name="state">A StartState containing the starting state.</param>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.FixedUpdate">
            <summary>
            Handles FixedUpdate
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWBallastTank.Update">
            <summary>
            Handles the Update event.
            </summary>
        </member>
        <member name="T:SunkWorks.Submarine.SWDiveComputer">
            <summary>
            A handy dive computer to help boats dive, surface, and maintain trim.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.debugMode">
            <summary>
            Debug flag
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.autoTrimEnabled">
            <summary>
            Indicates whether or not to automatically keep the boat level.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.divingControlEnabled">
            <summary>
            Indicates whether or not to enable dive control.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.maintainDepth">
            <summary>
            Indicates whether or not to maintain current depth
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.diveStateString">
            <summary>
            Display string for current state of the dive computer
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.hullIntegrity">
            <summary>
            Display string for current state of the dive computer
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.pitchAngle">
            <summary>
            Current pitch angle of the boat.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.rollAngle">
            <summary>
            Current roll angle of the boat.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.rollAngleTrigger">
            <summary>
            Roll angle that will trigger auto-trim. 0 is level, so anything that is +- this value will trigger auto-trim.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.pitchAngleTrigger">
            <summary>
            Pitch angle that will trigger auto-trim. 0 is level, so anything that is +- this value will trigger auto-trim.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.verticalSpeedTrigger">
            <summary>
            If maintainDepth is enabled, then when the vertical speed reaches +- the speed trigger, the boat will attempt to maintain depth.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.rollFluidRate">
            <summary>
            Roll-trim's fluid transfer rate (percent)
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.pitchFluidRate">
            <summary>
            Pitch-trim's fluid transfer rate (percent)
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.ballastFluidRate">
            <summary>
            Ballast's fluid transfer rate (percent)
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.ventState">
            <summary>
            Current vent state of the boat's ballast system.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.maxPressureOverride">
            <summary>
            Override maximum pressure in kPA. Parts have a default of 4000kPA, which gives them a collapse death of 400m on Kerbin.
            This override gives you a way to alter that collapse depth without modifying individual parts. If multiple
            dive computers are found on the boat, then the highest max pressure will be used.
            If there is a mismatch between the part's maxPressure and the dive computer's maxPressureOverride, then both
            will be set to the highest value.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.minControlledBuoyancy">
            <summary>
            Min controlled buoyancy for buoyancy controlled parts.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.maneuverState">
            <summary>
            Debug maneuver states
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWDiveComputer.vesselIsManeuvering">
            <summary>
            Flag to indicate that the vessel is maneuvering
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWDiveComputer.FloodBallast">
            <summary>
            Floods the ballast tank
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWDiveComputer.VentBallast">
            <summary>
            Vents ballast tank
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWDiveComputer.CloseVents">
            <summary>
            Close ballast vents
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWDiveComputer.EmergencySurface">
            <summary>
            Activates emergency surface, telling all ballast tanks to immediately dump their ballast. This affects parts marked as ballast or trim tanks.
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWDiveComputer.FloodBallastAction(KSPActionParam)">
            <summary>
            Action to flood ballast tank
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:SunkWorks.Submarine.SWDiveComputer.VentBallastAction(KSPActionParam)">
            <summary>
            Action to vent ballast tank
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:SunkWorks.Submarine.SWDiveComputer.CloseVentsAction(KSPActionParam)">
            <summary>
            Close ballast vents action
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:SunkWorks.Submarine.SWDiveComputer.EmergencySurfaceAction(KSPActionParam)">
            <summary>
            Emergency surface action
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:SunkWorks.Submarine.SWDiveComputer.ToggleMaintainDepthAction(KSPActionParam)">
            <summary>
            Toggle maintain depth action
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:SunkWorks.Submarine.SWDiveComputer.ToggleAutoTrimAction(KSPActionParam)">
            <summary>
            Toggle auto trim action
            </summary>
            <param name="param"></param>
        </member>
        <member name="T:SunkWorks.Submarine.SWSonarRanger">
            <summary>
            When underwater it's hard to see the terrain ahead and the seabed below.
            This part module helps avoid collisions with the terrain and seabed.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWSonarRanger.depthBelowKeel">
            <summary>
            How far it is to the bottom of the sea. Perhaps one should voyage there...
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWSonarRanger.rangeToTerrainDisplay">
            <summary>
            Range to terrain, in meters.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWSonarRanger.seabedPingActive">
            <summary>
            Toggle switch for the seabed proximity alarm
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWSonarRanger.seabedPingRange">
            <summary>
            Minimum range at which to play the seabed ping, if enabled.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWSonarRanger.shoalPingActive">
            <summary>
            Toggle switch for the seabed proximity alarm
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWSonarRanger.shoalPingRange">
            <summary>
            Minimum range at which to play the seabed ping, if enabled.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWSonarRanger.pingEffectSeabedName">
            <summary>
            Name of the effect to play when in proximity to the seabed.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.SWSonarRanger.pingEffectShoalName">
            <summary>
            Name of the effect to play when in proximity to a shoal.
            </summary>
        </member>
        <member name="M:SunkWorks.Submarine.SWSonarRanger.ToggleSeabedPingAction(KSPActionParam)">
            <summary>
            Action to toggle the seabed proximity alarm on/off
            </summary>
            <param name="param">A KSPActionParam</param>
        </member>
        <member name="M:SunkWorks.Submarine.SWSonarRanger.ToggleShoalPingAction(KSPActionParam)">
            <summary>
            Action to toggle the seabed proximity alarm on/off
            </summary>
            <param name="param">A KSPActionParam</param>
        </member>
        <member name="T:SunkWorks.Submarine.WBIPressureOverride">
            <summary>
            A helpful vessel module to handle overriding the maximum hull pressure of a vessel's parts.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.WBIPressureOverride.maxPressureOverride">
            <summary>
            Overrides how much pressure the vessel can take.
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.WBIPressureOverride.diveComputers">
            <summary>
            List of dive computers
            </summary>
        </member>
        <member name="F:SunkWorks.Submarine.WBIPressureOverride.partCount">
            <summary>
            Current vessel part count
            </summary>
        </member>
        <member name="T:SunkWorks.Utility.SWResourceVariants">
            <summary>
            A small helper class to update a part's resource when a part variant is applied.
            </summary>
        </member>
        <member name="F:SunkWorks.Utility.SWResourceVariants.resourceName">
            <summary>
            The name of the resource to update.
            </summary>
        </member>
        <member name="F:SunkWorks.Utility.SWResourceVariants.updateMaxOnly">
            <summary>
            A flag to indicate whether or not to only update the max amount.
            </summary>
        </member>
        <member name="T:SunkWorks.Utility.SWPartVariants">
            <summary>
            Helper part module to handle part mesh and texture switching. Stock ModulePartVariants doesn't cooperate with multiple ModulePartVariants in the same part, so this class
            gets around the issue and adds a few enhancements.
            </summary>
        </member>
        <member name="F:SunkWorks.Utility.SWPartVariants.variantIndex">
            <summary>
            Index for the texture variants.
            </summary>
        </member>
        <member name="F:SunkWorks.Utility.SWPartVariants.updateSymmetry">
            <summary>
            Flag to indicate if the symmetry parts should also apply the selected variant. Default is true.
            </summary>
        </member>
        <member name="F:SunkWorks.Utility.SWPartVariants.allowFieldUpdate">
            <summary>
            Flag to indicate whether the variant can be applied post launch. Default is false.
            </summary>
        </member>
        <member name="M:SunkWorks.Utility.SWPartVariants.OnStart(PartModule.StartState)">
            <summary>
            Handles the OnStart event.
            </summary>
            <param name="state">A StartState containing the starting state.</param>
        </member>
        <member name="M:SunkWorks.Utility.SWPartVariants.OnAwake">
            <summary>
            Handles OnAwake event
            </summary>
        </member>
        <member name="M:SunkWorks.Utility.SWPartVariants.OnDestroy">
            <summary>
            Handles the OnDestroy event
            </summary>
        </member>
        <member name="M:SunkWorks.Utility.SWPartVariants.GetModuleDisplayName">
            <summary>
            Gets the module display name.
            </summary>
            <returns>A string containing the display name.</returns>
        </member>
        <member name="M:SunkWorks.Utility.SWPartVariants.GetInfo">
            <summary>
            Gets the module description.
            </summary>
            <returns>A string containing the module description.</returns>
        </member>
        <member name="F:SunkWorks.Utility.SWPartModule.moduleID">
            <summary>
            ID of the module. Used to find the proper config node.
            </summary>
        </member>
        <member name="M:SunkWorks.Utility.SWPartModule.getPartConfigNode">
            <summary>
            Retrieves the module's config node from the part config.
            </summary>
            <returns>A ConfigNode for the part module.</returns>
        </member>
        <member name="M:SunkWorks.Utility.SWPartModule.loadCurve(FloatCurve,System.String,ConfigNode)">
            <summary>
            Loads the desired FloatCurve from the desired config node.
            </summary>
            <param name="curve">The FloatCurve to load</param>
            <param name="curveNodeName">The name of the curve to load</param>
            <param name="defaultCurve">An optional default curve to use in case the curve's node doesn't exist in the part module's config.</param>
        </member>
        <member name="T:SunkWorks.Utility.SWMirrorHelper">
            <summary>
            A helper class to mirror meshes, especially those that are node-attached.
            </summary>
        </member>
        <member name="F:SunkWorks.Utility.SWMirrorHelper.meshName">
            <summary>
            The mesh to show when mirroring is turned off.
            </summary>
        </member>
        <member name="F:SunkWorks.Utility.SWMirrorHelper.mirrorMeshName">
            <summary>
            The mesh to show when mirroring is turned on.
            </summary>
        </member>
        <member name="F:SunkWorks.Utility.SWMirrorHelper.variantName">
            <summary>
            Name of the variant to watch for. When it is selected, we'll enable the ability to mirror the meshes in the editor.
            </summary>
        </member>
    </members>
</doc>
