// Special thanks to Vali for figuring out this issue! :)
// The Vintage, Standard, and Future suits are all defined in separate part modules that are combined when KSP starts.
// The problem is that when Module Manager is used to add part modules to the kerbal, you'll get duplicates.
// To get around that problem, the ModuleKerbalEVAModules adds a custom LoadingSystem that adds any part modules defined by a
// KERBAL_EVA_MODULES node.
// This is the baseline file. For your mod, simply define another KERBAL_EVA_MODULES with one or more standard MODULE config nodes,
// and they'll be added to the kerbal.
KERBAL_EVA_MODULES
{
	// This module enables a kerbal to sink under the water andsurface again.
	MODULE
	{
		name = ModuleEVADiveComputer

		// Max buoyancy allowed
		maxPositiveBuoyancy = 1.1

		// How fast to control buoyancy, in percentage per second.
		buoyancyControlRate = 20

		// In kPA, the maximum pressure that the kerbal can take if he/she is wearing this suit.
		// Format: <name of the suit>,<max pressure>;<name of another suit>,<max pressure of the other suit>
		// The O'Beale suit enables diving to 300m on Kerbin, which is pretty close to the deepest dive record set by Ahmed Gabr in 2014.
		// The DeepSea suit enables kerbals to dive to 700m on Kerbin, which is akin to an Atmospheric Diving Suit that keeps its occupant at a pressure of 1atm.
		// NOTE: If a carried cargo part has an EVA_OVERRIDES node, then the values in that node will override the suit pressures.
		suitMaxPressures = wbiOBealeWetsuitM,3000;wbiOBealeWetsuitF,3000;wbiAtmoDivingSuitM,7000;wbiAtmoDivingSuitF,7000

		// The fields below are used when hard mode is enabled in game difficuties.

		// In seconds, how long a kerbal can hold is/her breath if the kerbal isn't wearing a helmet.
		// If the kerbal runs out of breath then he/she will start drowning.
		holdBreathDuration = 360

		// In seconds, how long a kerbal has to reach the surface before dying of drowing.
		drowningDuration = 10

		// In seconds, how long the air supply lasts.
		// This duration will be cut in half for every 10m of depth unless wearing an atmospheric diving suit.
		airSupplyDuration = 3600

		// How many seconds of air supply to recarge per second of being on the surface.
		airRechargeRate = 600
	}
}